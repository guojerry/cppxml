// $ANTLR 2.7.7 (20060906): CPP_parser.g -> STDCTokenTypes.txt$
STDC    // output token vocab name
LITERAL_template="template"=4
LESSTHAN=5
GREATERTHAN=6
LITERAL_typedef="typedef"=7
LITERAL_enum="enum"=8
SEMICOLON=9
ID=10
LCURLY=11
LITERAL_inline="inline"=12
LITERAL_extern="extern"=13
LITERAL_namespace="namespace"=14
LITERAL_antlrTrace_on="antlrTrace_on"=15
LITERAL_antlrTrace_off="antlrTrace_off"=16
RCURLY=17
ASSIGNEQUAL=18
COLON=19
OCTALINT=20
LITERAL_friend="friend"=21
StringLiteral=22
LITERAL_struct="struct"=23
LITERAL_union="union"=24
LITERAL_class="class"=25
LITERAL__declspec="_declspec"=26
LITERAL___declspec="__declspec"=27
LPAREN=28
RPAREN=29
LITERAL_auto="auto"=30
LITERAL_register="register"=31
LITERAL_static="static"=32
LITERAL_mutable="mutable"=33
LITERAL__inline="_inline"=34
LITERAL___inline="__inline"=35
LITERAL_virtual="virtual"=36
LITERAL_explicit="explicit"=37
LITERAL_typename="typename"=38
LITERAL_char="char"=39
LITERAL_wchar_t="wchar_t"=40
LITERAL_bool="bool"=41
LITERAL_short="short"=42
LITERAL_int="int"=43
"_int8"=44
"__int8"=45
"_int16"=46
"__int16"=47
"_int32"=48
"__int32"=49
"_int64"=50
"__int64"=51
"_w64"=52
"__w64"=53
LITERAL_long="long"=54
LITERAL_signed="signed"=55
LITERAL_unsigned="unsigned"=56
LITERAL_float="float"=57
LITERAL_double="double"=58
LITERAL_void="void"=59
LITERAL_const="const"=60
LITERAL_volatile="volatile"=61
COMMA=62
LITERAL_public="public"=63
LITERAL_protected="protected"=64
LITERAL_private="private"=65
OPERATOR="operator"=66
TILDE=67
LSQUARE=68
RSQUARE=69
STAR=70
AMPERSAND=71
ELLIPSIS=72
LITERAL_throw="throw"=73
LITERAL_using="using"=74
LITERAL_case="case"=75
LITERAL_default="default"=76
LITERAL_if="if"=77
LITERAL_else="else"=78
LITERAL_switch="switch"=79
LITERAL_while="while"=80
LITERAL_do="do"=81
LITERAL_for="for"=82
LITERAL_goto="goto"=83
LITERAL_continue="continue"=84
LITERAL_break="break"=85
LITERAL_return="return"=86
LITERAL_try="try"=87
LITERAL_catch="catch"=88
TIMESEQUAL=89
DIVIDEEQUAL=90
MINUSEQUAL=91
PLUSEQUAL=92
MODEQUAL=93
SHIFTLEFTEQUAL=94
SHIFTRIGHTEQUAL=95
BITWISEANDEQUAL=96
BITWISEXOREQUAL=97
BITWISEOREQUAL=98
QUESTIONMARK=99
OR=100
AND=101
BITWISEOR=102
BITWISEXOR=103
NOTEQUAL=104
EQUAL=105
LESSTHANOREQUALTO=106
GREATERTHANOREQUALTO=107
SHIFTLEFT=108
SHIFTRIGHT=109
PLUS=110
MINUS=111
DIVIDE=112
MOD=113
DOTMBR=114
POINTERTOMBR=115
PLUSPLUS=116
MINUSMINUS=117
LITERAL_sizeof="sizeof"=118
LITERAL___alignof__="__alignof__"=119
SCOPE=120
DOT=121
POINTERTO=122
LITERAL_dynamic_cast="dynamic_cast"=123
LITERAL_static_cast="static_cast"=124
LITERAL_reinterpret_cast="reinterpret_cast"=125
LITERAL_const_cast="const_cast"=126
LITERAL_typeid="typeid"=127
LITERAL_this="this"=128
DECIMALINT=129
HEXADECIMALINT=130
CharLiteral=131
WCharLiteral=132
WStringLiteral=133
FLOATONE=134
FLOATTWO=135
LITERAL_true="true"=136
LITERAL_false="false"=137
NOT=138
LITERAL_new="new"=139
LITERAL__cdecl="_cdecl"=140
LITERAL___cdecl="__cdecl"=141
LITERAL__near="_near"=142
LITERAL___near="__near"=143
LITERAL__far="_far"=144
LITERAL___far="__far"=145
LITERAL___interrupt="__interrupt"=146
LITERAL_pascal="pascal"=147
LITERAL__pascal="_pascal"=148
LITERAL___pascal="__pascal"=149
LITERAL__stdcall="_stdcall"=150
LITERAL___stdcall="__stdcall"=151
LITERAL_delete="delete"=152
MYFUNCTION=153
MYPARAM=154
MYDECLAR=155
MYEXPRESSION=156
MYBODY=157
MYSTATEMENT=158
MYCLASS=159
MYTEMPLATE=160
MYNAMESPACE=161
Whitespace=162
Comment=163
CPPComment=164
PREPROC_DIRECTIVE("a line directive")=165
LineDirective=166
Space=167
Pragma=168
Error=169
EndOfContinuedLine=170
EndOfLine=171
Escape=172
Digit=173
Decimal=174
LongSuffix=175
UnsignedSuffix=176
FloatSuffix=177
Exponent=178
UniversalCharacterName=179
HexQuad=180
HexadecimalDigit=181
Vocabulary=182
Number=183
